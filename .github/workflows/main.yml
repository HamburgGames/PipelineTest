name: Build & Deploy

on: 
  workflow_dispatch:
# [push, pull_request]

jobs:
  build:
    name: Build Project ðŸ› 
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
#       - name: Run tests
#         uses: game-ci/unity-test-runner@v2
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#         with:
#           githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64
          
      # Zip build
      - name: Zip files
        run: zip -r build.zip build

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build.zip
          
  deploy:
    name: Deploy to Dropbox ðŸ“¦
    needs: build
    runs-on: ubuntu-latest
    steps:
      #Download artifact
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          # Artifact name
          name: Build # optional
          # Destination path
          path: build # optional
          
      - name: ls
        run: ls && cd build && ls
          
      # Upload to Dropbox
      - name: Upload to Dropbox
        uses: aTable/deploy-to-dropbox@v1.0.7
        with:
          DROPBOX_ACCESS_TOKEN: ${{ secrets.DROPBOX_ACCESS_TOKEN }}
          GLOB: build/*
          DROPBOX_DESTINATION_PATH_PREFIX: /builds/ # optional, default is /
      
      # Get Dropbox Link
      - name: Create Dropbox Link
        id: create-link-dropbox
        uses: RexIturan/create-link-dropbox@v0.0.1-alpha
        with:
          DROPBOX_ACCESS_TOKEN: ${{ secrets.DROPBOX_ACCESS_TOKEN }}
          DROPBOX_FILE_PATH: /builds/build # optional, default is /
          DEBUG: false # optional
          
      #Post Link to Discord
      - name: Discord Notify
        uses: stegzilla/discord-notify@v4
        with:
          webhook_url: ${{ github.DISCORD_WEBHOOK }}
          # Title for card
          title: Build Link # optional, default is 
          # Content of card
          message: ${{ steps.create-link-dropbox.outputs.link}} # default is 
          # If action is used in a pull request, attach the preview image for it to the card. Required for custom_image_url
          #include_image: # optional, default is false
          # Avatar to use for user
          #avatar_url: # optional, default is 
          # Username to send message as
          #username: # optional, default is GitHub
          # Colour for the edge of the card in hex
          #colour: # optional, default is #3371FF
          # Include custom image on card, include_image must be true
          #custom_image_url: # optional, default is 
          # Make the title of the card a link
          #title_url: # optional, default is 

